# Setup

esphome:
  name: silviaesp32
  platform: ESP32
  board: nodemcu-32s

wifi:
  # Replace with your Wifi SSID:
  ssid: "emiladhoc" # This is the name of my laptop's hotspot
  # Replace with your Wifi password:
  password: "coffeetime"
  power_save_mode: none

# Uncomment to assign a static IP if necessary:
#  manual_ip:
#    static_ip: x.x.x.x
#    gateway: x.x.x.x
#    subnet: 255.255.255.0

  ap:  # Enable fallback hotspot (captive portal) in case wifi connection fails
    ssid: "silviaesp32"
    password: "ineedhelp"

captive_portal:

# Enable logging
logger:
  baud_rate: 500000

# Enable Home Assistant API
api:
  password: "coffeetime"

ota:
  password: "coffeetime"
  safe_mode: False
  num_attempts: 100

# Font
font:
  - file: "poppinsMedium.ttf"
    id: sys_font
    size: 20

# Inputs

sensor:

  # to-do: Make a native zacwire library for ESPHome. I can already tell interrupts are going to be a big issue with this. At the moment we're using a second ESP with Lebuni's library (https://github.com/lebuni/ZACwire-Library) for the TSic306s.
  # to-do: Create a better card to display/log these values. The default card only shows the last hour of data (and we want a ~1 minute range.) 

  - platform: adc
    pin: 35 
    attenuation: 11db
    name: "Pressure"
    id: pressure
    update_interval: 1s
    unit_of_measurement: Bar
    filters:
      - multiply: 1 # May change depending on transducer/current adapter

  - platform: pulse_width
    pin: GPIO12 
    update_interval: 1s
    name: "Boiler PWM Link"
    id: boilerPWMLink
    unit_of_measurement: "째C"
    filters:
     - multiply: 1000

  - platform: pulse_width
    pin: GPIO14
    update_interval: 1s
    name: "Group Head PWM Link"
    id: groupHeadPWMLink
    unit_of_measurement: "째C"
    filters:
     - multiply: 1000
  
  # Make sure your HA config is looking for these
  - platform: homeassistant
    entity_id: sensor.preinfusion_time
    id: preinfusionTime
    unit_of_measurement: "s"
  - platform: homeassistant
    entity_id: sensor.preinfusion_power
    id: preinfusionPower
    unit_of_measurement: "%"
  - platform: homeassistant
    entity_id: sensor.initial_time
    id: initialTime
    unit_of_measurement: "s"
  - platform: homeassistant
    entity_id: sensor.initial_power
    id: initialPower
    unit_of_measurement: "%"
  - platform: homeassistant
    entity_id: sensor.ramp_time
    id: rampTime
    unit_of_measurement: "s"
  - platform: homeassistant
    entity_id: sensor.ramp_power
    id: rampPower
    unit_of_measurement: "%"

binary_sensor:

  - platform: gpio
    pin:
      number: 33
      mode: INPUT_PULLUP
    name: "Brew Switch"
    id: brewSwitch
    on_press:
     then:
       - output.turn_on: solenoid
       - delay: 1s # in case solenoid sticks for some reason

      # Delay and level values are grabbed from the HA frontend

      # to-do: feed pressure values into a control loop to reach a pressure rather than phase %
      # to-do: cancel actions if user flips switch off half-way through the shot
      # to-do: create a smooth curve between power levels (use lambdas?)
      # to-do: dropdown list of profiles with a load/save feature (use JSON files?)

       - output.set_level: # AKA preinfusion
           id: pump
           level: preinfusionPower
       - delay: preinfusionTime

       - output.set_level: #AKA initial
           id: pump
           level: initialPower
       - delay: initialTime

       - output.set_level: #AKA ramp
           id: pump
           level: rampPower
       - delay: rampTime

       # Brew profile is finished

       - output.turn_off: solenoid
       - output.set_level: 
           id: pump
           level: 0% 

    on_release:
     then:
       - output.turn_off: solenoid
      # - output.turn_off: pump
       - output.set_level:
           id: pump
           level: 0%

  - platform: gpio
    pin:
      number: 26
      mode: INPUT_PULLUP
    name: "Hot Water Switch"
    id: hotWaterSwitch
    on_press:
     then:
       - output.set_level:
           id: pump
           level: 100%
    on_release:
     then:
       - output.set_level:
           id: pump
           level: 0%

  - platform: gpio
    pin:
      number: 25
      mode: INPUT_PULLUP
    name: "Steam Switch"
    id: steamSwitch

climate:
  - platform: pid
    name: "PID Controller"
    sensor: boilerPWMLink
    default_target_temperature: 90째C
    heat_output: boilerSSR
    control_parameters:
      kp: 0.49460
      ki: 0.00487
      kd: 12.56301
    visual:
      max_temperature: 100째C

# Outputs

i2c:
  sda: GPIO21
  scl: GPIO22

display:
  - platform: ssd1306_i2c # SSD1306 pinouts vary
    model: "SSD1306 128x64"
    #reset_pin: 0
    #address: 0x3c
    lambda: |-
      it.printf(0, 0, id(sys_font), "deg: %.01f", id(boilerPWMLink).state);
      it.printf(0, 22, id(sys_font), "bar: %.01f", id(pressure).state);

switch:
  - platform: restart
    name: "Restart ESP"

# Not using phase angle control for stability at the moment

output:

  - platform: gpio
    id: solenoid
    pin: GPIO5
    inverted: False

  - platform: slow_pwm
    pin: GPIO16
    id: boilerSSR
    period: 100ms

  - platform: ac_dimmer
    id: pump
    gate_pin: GPIO19
    zero_cross_pin:
      number: GPIO18
      mode: INPUT
      inverted: yes

light:
  - platform: monochromatic
    output: pump
    name: Phase Angle Pump
